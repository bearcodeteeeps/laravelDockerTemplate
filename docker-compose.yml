version: '3.7'

services:
  nginx:
    container_name: nginx_api
    image: nginx:stable
    ports:
    - ${DOCKER_HTTP_PORT}:80
    - ${DOCKER_HTTPS_PORT}:443
    working_dir: /app
    volumes:
    - .:/app
    - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    links:
    - postgres
    - redis

  php:
    container_name: php_api
    build: ./docker/php
    working_dir: /app
    volumes:
    - .:/app
    - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    - $HOME/.composer/cache:/root/.composer/cache
    links:
    - postgres
    - redis

  redis:
    container_name: redis_api
    image: redis:5

  postgres:
    container_name: postgres_api
    image: postgres:12
    ports:
      - ${DOCKER_POSTGRES_PORT}:5432
    volumes:
      - postgres-data:/data/postgres/db
    environment:
      POSTGRES_DB: ${DOCKER_POSTGRES_DATABASE}
      POSTGRES_USER: ${DOCKER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DOCKER_POSTGRES_PASSWORD}

volumes:
  postgres-data:
    driver: local
    
  # mysql:
    # container_name: mysql_api
    # image: mysql:8
    # command: --default-authentication-plugin=mysql_native_password
    # restart: always
    # ports:
      # - ${DOCKER_MYSQL_PORT}:3306
    # volumes:
      # - mysql-data:/data/mysql/db
    # environment:
      # MYSQL_ROOT_PASSWORD: ${DOCKER_MYSQL_PASSWORD}
      # MYSQL_DATABASE: ${DOCKER_MYSQL_DATABASE}
      # MYSQL_USER: ${DOCKER_MYSQL_USER}
      # MYSQL_PASSWORD: ${DOCKER_MYSQL_PASSWORD}

# volumes:
  # mysql-data:
    # driver: local